learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep ="\t", header=TRUE)
str(learning2014)
dim(learning2014)
library(dplyr)
install.packages("dplyr")
library(dplyr)
learn_sub1 <- c("Gender", "Age", "Attitude", "Points", "Deep",
"Stra", "Surf")
select(learning2014, one_of(learn_sub1))
learn_sub1 <- c("gender", "Age", "Attitude", "Points", "deep",
"stra", "surf")
select(learning2014, one_of(learn_sub1))
str(learning2014)
d_sm <- rowMeans(select(learning2014, one_of(c("D03","D11","D19","D27"))))
d_ri <- rowMeans(select(learning2014, one_of(c("D07","D14","D22","D30"))))
d_ue <- rowMeans(select(learning2014, one_of(c("D06","D15","D23","D31"))))
dim(d_sm)
str(learning2014)
d_sm <- select(learning2014, one_of(c("D03","D11","D19","D27")))
dim(d_sm)
deep_var <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22",
"D30", "D06", "D15", "D23", "D31")
deep_col <- select(learning2014, one_of(deep_var))
deep <- rowsum(deep_col)
glimpse(deep)
glimpse(deep_col)
deep <- rowSums(deep_col)
glimpse(deep)
learning2014$deep <- deep
learning2014$deep
deep_adj <- roeMeans(deep_col)
deep_adj <- rowMeans(deep_col)
glimpse(deep_adj)
learning2014$deep_adj <- deep_adj
scatter(learning2014, deep~deep_adj)
scatter.smooth(learning2014, deep~deep_adj)
glimpse(deep_adj)
glimpse(deep_adj)
glimpse(deep)
stra_var <- c("ST01","ST09","ST17","ST25", "ST04","ST12",
"ST20","ST28")
stra_col <- select(learning2014, one_of(stra_var))
stra <- rowSums(stra_col)
stra_adj <- rowMeans(stra_col)
learning2014$stra <- stra
learning2014$stra_adj <- stra_adj
surf_var <- c("SU02", "SU10", "SU18", "SU26", "SU05", "SU13",
"SU21", "SU29", "SU08", "SU16", "SU24", "SU32")
surf_col <- select(learning2014, one_of(surf_var))
surf <- rowSums(surf_col)
surf_adj <- rowMeans(surf_col)
learning2014$surf <- surf
glimpse(learning2014)
surf <- as.int(rowSums(surf_col))
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
source('~/GitHub/IODS-project/data/create_learning2014.R', echo=TRUE)
glimpse(learning2014_c1)
glimpse(learning2014)
choose_var <- c("gender", "Age", "Attitude", "deep", "stra",
"surf", "Points")
learning2014_c1 <- select(learning2014, one_of(choose_var))
glimpse(learning2014_c1)
filter(learning2014_c1, Points > 0)
glimpse(learning2014_c1)
learning2014_c2 <- filter(learning2014_c1, Points > 0)
glimpse(learning2014_c2)
?write.csv
getwd()
setwd("C:\Users\Janne\Documents\Github\IODS-project\data")
setwd("C:\Users\Janne\Documents\GitHub\IODS-project\data")
setwd("C:\Users\Janne\Documents\Github\IODS-project\data")
setwd("C/Users/Janne/Documents/Github/IODS-project/data")
setwd("~/GitHub/IODS-project/data")
write.csv(learning2014_c2, file = "learning2014")
write.csv2(learning2014_c2, file = "learning2014")
read.csv2(learning2014)
read.csv2("learning2014)
read.csv2("learning2014")
read.csv2("learning2014")
str(learning2014)
learning2014_2 <- read.csv2("learning2014")
str(learning2014)
str(learning2014_2)
getwd
getwd()
student_1 <- read.csv("student_mat")
student_1 <- read.csv("student-mat")
?read.csv
student_1 <- read.csv("student-mat.csv")
student_2 <- read.csv("student-por.csv")
join_by <- c("school", "sex", "age", "address", "famsize",
"Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason",
"nursery", "internet")
join_by
library(dplyr)
alc <- inner.join(student_1, student_2, by = join_by)
library(dplyr)
?library()
alc <- inner.join(student_1, student_2, by = join_by)
alc <- inner_join(student_1, student_2, by = join_by)
glimpse(student_1)
student_1
student_1 <- read.csv2("student-mat.csv")
student_2 <- read.csv2("student-por.csv")
student_1
glimpse(student_1)
alc <- inner_join(student_1, student_2, by = join_by)
glimpse(alc)
alc_1 <- select(alc, one_of(join_by))
notjoined_columns <- colnames(alc)[!colnames(alc) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(alc, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_1[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc_1)
alc_1 <- select(alc, one_of(join_by))
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(alc, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_1[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc_1[column_name] <- first_column
}
}
glimpse(alc_1)
notjoined_columns <- colnames(x)[!colnames(x) %in% join_by]
notjoined_columns <- select(alc, ends_with("x"))
notjoined_columns
notjoined_columns <- colnames(select(alc, ends_with("x")))
notjoined_columns
notjoined_columns <- colnames(select(alc, ends_with(".x")))
notjoined_columns
gsub(".x", "", notjoined_columns)
notjoined_columns <- gsub(".x", "", notjoined_columns)
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(alc, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_1[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc_1[column_name] <- first_column
}
}
glimpse(alc_1)
notjoined_columns
notjoined_columns <- gsub(".x", "", notjoined_columns)
for(column_name in notjoined_columns) {
# select two columns from 'alc' with the same original name
two_columns <- select(alc, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_1[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc_1[column_name] <- first_column
}
}
glimpse(alc_1)
alc_1 <- select(alc, one_of(join_by))
for(column_name in notjoined_columns) {
# select two columns from 'alc' with the same original name
two_columns <- select(alc, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_1[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc_1[column_name] <- first_column
}
}
glimpse(alc_1)
alc_use <- rowMeans(select(alc_1, one_of(c("Dalc", "Walc"))))
glimpse(alc_use)
hist(alc_use)
alc_1$alc_use <- alc_use
high_use <- subset(alc_1, alc_use > 2)
head(high_use)
high_use <- alc_1$alc_use[>2]
high_use <- alc_1$alc_use > 2
head(high_use)
head(alc_use)
alc_1$high_use <- high_use
glimpse(alc_1)
write.csv2(alc_1, "student_alc")
getwd()
setwd("C:/Users/Janne/Documents/GitHub/IODS-project")
knitr::opts_chunk$set(echo = TRUE)
read.csv2("~/data/studen_alc")
read.csv2("~/data/studen_alc.csv")
read.csv2("~/data/student_alc.csv")
read.csv2("C:/Users/Janne/Documents/GitHub/IODS-project/data/student_alc.csv")
studen_alc <- read.csv2("C:/Users/Janne/Documents/GitHub/IODS-project/data/student_alc.csv")
table.prop(alc_1$sex, alc_1$high_use)
prop.table(alc_1$sex, alc_1$high_use)
sukup <- table(alc_1$sex, alc_1$high_use)
prop.table(sukup)
sukup
sukup <- table(studen_alc$sex, studen_alc$high_use)
prop.table(sukup)
sukup
prop.table(sukup)
hist(sukup)
plot(pressure)
plot(sukup)
plot(sukup)
library(dplyr)
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
p1 <- ggplot(studen_alc, aes(x = high_use, y = romance, col=gender))
p1 + geom_point()
p1 <- ggplot(studen_alc, aes(x = high_use, y = romantic, col=gender))
p1 + geom_point()
p1 <- ggplot(studen_alc, aes(x = high_use, y = romantic, col=sex))
p1 + geom_point()
?ggplot()
p1 <- ggplot(studen_alc, aes=(x=high_use, y=romantic, col=sex),)
p1 <- ggplot(studen_alc, aes=(x=high_use y=romantic col=sex))
p1 <- ggplot(studen_alc, aes(x=high_use, y=romantic, col=sex))
p1 + geom_bar()
p1 + geom_bin2d()
p1 + geom_boxplot()
rom_alc <- table(studen_alc$high_use, studen_alc$romantic)
p1 <- ggplot(rom_alc, aes(col=sex))
ggplot()
p1 + geom_boxplot()
p1 + geom_boxplot(rom_alc)
ggplot()
geom_boxplot(rom_alc)
hist(rom_alc)
rom_alc
plot(studen_alc$high_use, studen_alc$romantic, ylab = "Romantic", xlab = "High use")
barplot(rom_alc)
barplot(rom_alc, col("darkblue", "red"),legend = rownames(romantic))
barplot(rom_alc, col=c("darkblue", "red"), legend = rownames(romantic))
barplot(rom_alc, col=c("darkblue", "red"), legend = rownames(studen_alc$romantic))
plot(sukup, title = ("Alcohol usage by sex"))
plot(sukup, main = ("Alcohol usage by sex"))
plot(sukup, main = ("Alcohol usage by sex"), col=c("darkblue", "red"))
barplot(rom_alc, col=c("darkblue", "red"), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"))
barplot(rom_alc, col=c("red","darkblue" ), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"))
barplot(rom_alc, col=c("darkblue", "red" ), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"))
barplot(rom_alc, col=c("darkblue", "red" ), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"),sub=("Red is high alcohol use")
barplot(rom_alc, col=c("darkblue", "red" ), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"),sub=("Red is high alcohol use"))
barplot(rom_alc, col=c("darkblue", "red" ), legend = rownames(studen_alc$romantic), main=("Romantic ties and alcohol"))
lm(studen_alc$high_use ~ studen_alc$romantic)
plot(lm(studen_alc$high_use ~ studen_alc$romantic))
library(MASS)
library(dplyr)
library(ggplot2)
?Boston
data("Boston")
dim(Boston)
summary(Boston)
summary(Boston$zn)
hist(BOston$zn)
hist(Boston$zn)
head(Boston)
boxplot(Boston)
bwplot(Boston)
geom_boxplot() + Boston
Boston + geom_boxplot()
b <- ggplot(Boston)
geom_boxplot() + b
?aes
ggpairs(Boston)
b_1<- ggpairs(Boston)
install.packages("GGally")
b_1<- ggpairs(Boston)
library(ggplot2)
library(GGally)
b_1<- ggpairs(Boston)
b_1
?ggpairs()
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
?corrplot
corrplot(cor_matrix, method="circle", type = "full", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
cor(Boston)
b <- ggplot(Boston, aes(age, dis))
b
?AES()
?AES()
?aes()
b + geom_point()
summary(Boston$age)
table(Boston)
pairs(Boston)
ggplot(Boston)
b_1 <- ggplot(Boston)
b_1 + geom_boxplot
b_1 + geom_boxplot()
dim(Boston)
m <- matrix(1:9)
m
pairs(Boston, aes(Boston[,1:14]))
b_1 <- ggplot(Boston, aes(Boston[,1:14]))
b_1 + geom_boxplot()
b_1 <- ggplot(Boston, aes(Boston[,1:14]))
b + geom_point()
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
?geom_boxplot()
b_1 + stat_boxplot()
b_1 <- ggplot(Boston, aes(Boston[1:506,]))
b_1 + stat_boxplot()
b_1 <- ggplot(Boston)
b_1 + stat_boxplot()
mosaicplot(Boston)
xyplot(Boston)
view(Boston)
View(Boston)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
summary(Boston)
boxplot(summary(Boston))
s <- summary(Boston)
class(s)
b <- ggplot(s)
b + geom_point()
s <- as.data.frame(s)
b <- ggplot(s)
b + geom_point()
pairs(s)
xyplot(s)
View(s)
install.packages("sfsmisc")
library(sfsmisc)
boxplot.matrix(Boston)
?boxplot.matrix()
boston_m <- as.matrix(Boston)
boxplot.matrix(boston-m)
boston_m
boxplot.matrix(boston_m)
boston_m2 <- select(boston_m, one_of(bosvar2))
bosvar1 <- c("crim", "zn", "indus", "nox", "rm", "age", "dis")
boston_m1 <- select(boston_m, one_of(bosvar1))
boston_m1 <- select(Boston, one_of(bosvar1)) %>% as.matrix()
bosvar1 <- c("crim", "zn", "indus", "nox", "rm", "age", "dis")
boston_m1 <- select(Boston, one_of(bosvar1)) %>% as.matrix()
boston_m1 <- select(Boston, one_of(bosvar1))
library(dplyr)
boston_m1 <- select(Boston, one_of(bosvar1))
summary(Boston)
